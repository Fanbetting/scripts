{
    "hints": {
        "get_discount(address)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "is_legacy_holder(address)bool": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "bootstrap(uint64,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_legacy_holders(address[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_admin_account(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_legacy_discount(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_legacy_holder(address,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_regular_discount(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 4
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "administrator": {
                    "type": "bytes",
                    "key": "administrator"
                },
                "bootstrapped": {
                    "type": "uint64",
                    "key": "bootstrapped"
                },
                "legacy_discount": {
                    "type": "uint64",
                    "key": "legacy_discount"
                },
                "registry_app": {
                    "type": "uint64",
                    "key": "registry_app"
                },
                "regular_discount": {
                    "type": "uint64",
                    "key": "regular_discount"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "FanbetDiscounter",
        "methods": [
            {
                "name": "get_discount",
                "args": [
                    {
                        "type": "address",
                        "name": "holder"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "is_legacy_holder",
                "args": [
                    {
                        "type": "address",
                        "name": "holder"
                    }
                ],
                "readonly": true,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "uint64",
                        "name": "legacy_discount"
                    },
                    {
                        "type": "uint64",
                        "name": "regular_discount"
                    },
                    {
                        "type": "uint64",
                        "name": "registry_id"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "add_legacy_holders",
                "args": [
                    {
                        "type": "address[]",
                        "name": "holders"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "update_admin_account",
                "args": [
                    {
                        "type": "address",
                        "name": "new_admin"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "update_legacy_discount",
                "args": [
                    {
                        "type": "uint64",
                        "name": "new_discount"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "update_legacy_holder",
                "args": [
                    {
                        "type": "address",
                        "name": "holder"
                    },
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "update_regular_discount",
                "args": [
                    {
                        "type": "uint64",
                        "name": "new_discount"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}